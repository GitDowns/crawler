from requests import authimport reimport urlimport copyimport timefrom bs4 import BeautifulSoupimport download# class Data:form = {    'p_grcode': 'N000001',    'p_grcode_subj': 'N000001',    'p_subjseq': '',    'p_menutop': '009000000',    'p_class': '',    'p_systemgubun': '3',    'p_levels': '1',    'p_language': 'ENG',    'p_language_': 'ENG',    'p_userid': '',    'p_name': '',    'p_name_kor': '',    'p_name_eng': '',    'p_name_chn': '',    'p_name_jpn': '',    'p_comp': '1031',    'p_ip': '192.168.1.12',    'p_auth': 'S',    'p_mtype': 'UA',    'p_menusub': '',    'p_direct': '',    'p_url': '',    'p_isSubj': '',    'p_passwdcheck': 'N',    'p_userid_': '',    'p_passwd_': '',    'p_select_auth': 'S|N000001',    'p_year_subjseq': '',  #####!!    'p_subj': '',  ####！！    'p_year': '',  ####！！    'p_subj_class': '',  #####!    'p_process': '',  ####!}course = {    'auth': '',    'authnm': '',    'grcode': '',    'subj': '',    'year': '',    'subjseq': '',    'subjclass': '',}archive_post_form = {    'p_grcode': 'N000001',    'p_pageno': '0',    'p_process': 'listPage',    'p_skey': 'title',    'p_stext': '',    'p_subj': '',    'p_subjseq': '',    'p_tabseq': '21',    'p_year': '',    'p_bdseq': '',    'p_class': '',}def getcourses(session, form):    r = session.post(url.base_url + url.subj_url, form)    # print(r.text)    return r# def __init__(self, r):#   regex(r, data)#    print('')def getsutdentinfo(r):    str = r.text    form.update({'p_name': ''.join(re.findall(r"name[:]['][\w]*[\s]?[\w]*", str))[6:]})    form.update({'p_userid': ''.join(re.findall(r"U[0-9]{7}", str))})    return formdef getcousesinfo(r):    formset = []    form.update({'p_process': 'listPage'})    str = r.text    str = (re.split(r"[\}][\,]", str))    for i in str:        a = copy.copy(search(i))        formset.append(a)    return formsetdef search(element):    a = ''    b = ''    cont = 0    key_var_lock = 0    for i in element:        if (i == '\''):            if (cont == 0):  # and key_var_lock == 0                cont = 1                key_var_lock = 0            elif (cont == 1):                course.update({a: b})                a = ''                b = ''                key_var_lck = 0                cont = 0        elif (i == ',' and cont == 0):            pass        elif (i == ':'):            key_var_lock = 1        elif (                (i == '\r'                 or i == '\n'                 or i == '['                 or i == ']'                 or i == '{'                 or i == '}'                 or (i == ' ' and cont == 0)                )                and key_var_lock == 0        ):            continue        elif (                (                        (i >= 'a' and i <= 'z')                        or (i >= 'A' and i <= 'Z')                        or (i >= '0' and i <= '9')                        or (i == '_')                        or (i == '\v')                        or (i == ' ' and cont == 1)                )                and key_var_lock == 0        ):            if (cont == 0):                a = ''.join(a) + i            elif (cont == 1):                b = ''.join(b) + i            else:                pass    course.update(dict(grcode_subjseq=course['subjseq']))    return coursedef archive(formset, form, session, r):    form.update(dict(p_process='listPage'))    for i in formset:        form.update(dict(p_subjseq=i['subjseq'],                         p_subj=i['subj'],                         p_year=i['year'],                         p_subj_class=i['subj'] + ':' + i['subjclass'],                         p_year_subjseq=i['year'] + ':' + i['subjseq'],                         p_class=i['subjclass']                         )                    )        items_seq = return_archive_file_info(session, form, r)        download_item(session, form, items_seq)def return_archive_file_info(session, form, r):    itemseq = []    form.update(dict(p_pageno='1'))    r = session.post(url.base_url + url.archive_url, form, cookies=r.cookies)    str = r.text    page=re.findall(r"goPage[(]['][0-9]*",str)    for i in page:        form.update(dict(p_pageno=''.join(i)[8:]))        r = session.post(url.base_url + url.archive_url, form, cookies=r.cookies)        a = re.findall(r"whenDetail[(]['][0-9]*", r.text)        for i in a:            itemseq.append(''.join(i)[12:])    return itemseqdef download_item(session, form, file_info_set):    archive_post_form.update(dict(p_subjseq=form['p_subjseq'],                                  p_subj=form['p_subj'],                                  p_year=form['p_year'],                                  p_class=form['p_class'],                                  p_process='view'                                  )                             )    for i in file_info_set:        archive_post_form.update(dict(p_bdseq=i))        r = session.post(url.base_url + url.archive_item_url, archive_post_form)        soup = BeautifulSoup(r.text)        a = (soup.find_all("a"))        for i in a:            try:                str = ''.join(i['href'])                b = re.findall(r"[\"].*[\"]", str)                c = re.split(r"[,]", ''.join(b))                download.download(session, ''.join(c[0])[1:-1], ''.join(c[1])[1:-1], ''.join(c[2])[1:-1])            except Exception as joinherf:                print('KeyError \'herf\'')            #time.sleep(1)            # r = session.post(url.base_url + url.archive_item_url, archive_post_form)def get_download_info():    return 0